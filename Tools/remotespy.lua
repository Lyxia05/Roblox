loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/refs/heads/master/SimpleSpy.lua"))()



-- Script generated by SimpleSpy - credits to exx#9394

game:GetService("ReplicatedStorage").remotes.changeStartValue:FireServer()


-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = CFrame.new(-98.05381774902344, -734.9266357421875, 1211.1822509765625) * CFrame.Angles(0, -1.2751245498657227, -0)
}

game:GetService("Players").LocalPlayer.Character:FindFirstChild("Crab Cage").Deploy:FireServer(unpack(args))

-- Script generated by SimpleSpy - credits to exx#9394

workspace.world.npcs.Appraiser.appraiser.appraise:InvokeServer()


-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = {
        ["y"] = -696.315,
        ["x"] = 95.607,
        ["z"] = -967.854
    }
}

game:GetService("ReplicatedStorage").events.open_treasure:FireServer(unpack(args))



-- Script generated by SimpleSpy - credits to exx#9394

local args = {{{["\t"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rejuvenating Spray")},"U"}}
game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))


-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = {
        [1] = {
            ["\t"] = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Rejuvenating Spray")
        },
        [2] = "J"
    }
}

game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))







local args = {
    [1] = {
        [1] = {
            [1] = "\1",
            [2] = {
                ["stat"] = "physicalPower",
                ["amount"] = 100000
            }
        },
        [2] = "&"
    }
}

game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))


local args = {
    [1] = {
        math.huge()
    }
}

game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))







-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = {
        [1] = {
            [1] = "\1",
            [2] = {
                ["stat"] = "physicalPower",
                ["amount"] = 0/0
            }
        },
        [2] = 0/0
    }
}

game:GetService("ReplicatedStorage").dataRemoteEvent:FireServer(unpack(args))


for index, value in pairs(workspace:GetDescendants()) do
    if value:IsA("BoolValue") and value.Name == "Weapon" then
        print(value.Parent.Name)
    end
end


local meta = getrawmetatable(game)
local old = meta.__namecall
local callMethod = getnamecallmethod or get_namecall_method
local newClosure = newcclosure or function(f)
	return f
end

if setreadonly then
	setreadonly(meta, false)
else
	make_writeable(meta, true)
end

meta.__namecall = newClosure(function(Event, ...)
    local cmethod = callMethod()
    local arguments = {...}

    print(Event)

    return old(Event, ...)
end)